<지난과제>
## 1. 확각프롬프트 : 이성계가 만든 한글 설명해줘.

이성계(李成桂)는 14세기 말에서 15세기 초에 조선 왕조를 세운 조선의 건국자이자 최초의 국왕입니다. 그는 조선 왕조를 건국하고, 한글(한국어의 문자)을 창제하는 데 큰 역할을 했습니다. 한글은 한국의 공식 문자체계로 사용되며 현재까지도 한국에서 주로 사용되는 문자입니다.
이성계는 1443년에 한글을 창제하였는데, 이것은 한국의 언어를 기록하기 위한 간편하고 효율적인 문자를 개발하기 위한 노력의 결과였습니다. 이전에는 한자(중국 문자)가 한국에서 주로 사용되었으나, 이는 학문과 관료 계층을 위한 것으로서 일반 국민들이 사용하기에는 어려움이 있었습니다. 그래서 이성계는 한글을 개발하여 국민들이 쉽게 읽고 쓸 수 있는 문자체계를 만들었습니다.
한글은 각 글자가 발음을 나타내는 방식으로 구성되어 있어서, 한국어의 발음을 표기하기에 매우 효과적입니다. 이성계의 한글 창제는 한국어를 보다 효율적으로 기록하고 전파하는 데 큰 역할을 하였으며, 한국의 문화와 국어 교육에 지속적으로 사용되어왔습니다. 이로써 한글은 한국의 핵심적인 문화적 특성 중 하나로 자리 잡아오게 되었습니다.


## 2. 서평에서 감정목록을 추출하고 분석해줘.
주어진 리뷰 텍스트를 바탕으로 감정을 분석해봅시다. 주어진 리뷰들은 다양한 내용과 톤을 포함하고 있습니다. 몇몇 리뷰는 긍정적인 표현과 느낌을 담고 있고, 다른 몇몇은 부정적인 감정이 드러납니다. 
이를 바탕으로 각 리뷰를 간단하게 분석해보겠습니다. 일반적으로 감정 분석은 단어 및 표현의 감정 색깔(긍정적, 부정적, 중립적)을 판단합니다. 
1. **리뷰 1:** 부정적인 감정이 드러남. 리뷰어가 책의 내용에 대해 일부 동의하지만, 특정 부분(저자의 종교와 관련된 경험)에 대해 부정적인 의견을 표현함.
2. **리뷰 2:** 긍정적인 감정이 드러남. 리뷰어가 책의 내용과 저자의 스타일에 대해 매우 긍정적이며, 책에 대한 열정을 나타냄.
3. **리뷰 3:** 매우 부정적인 감정이 드러남. 리뷰어가 책의 내용, 저자의 스타일, 그리고 에디팅에 대해 여러 가지 문제를 지적함.
4. **리뷰 4:** 긍정적인 감정이 드러남. 리뷰어가 책의 내용과 메시지에 대해 긍정적인 피드백을 제공함.
5. **리뷰 5:** 긍정적인 감정이 드러남. 리뷰어가 책에 대한 강한 감정적 반응과 개인적인 연결을 표현함.

단순히 긍정적이거나 부정적인 단어를 기반으로 감정을 판단하는 것은 한계가 있을 수 있습니다. 보다 정확한 감정 분석을 위해서는, 자연어 처리(NLP)와 기계 학습을 활용한 모델을 사용하는 것이 효과적입니다.
만약 더 많은 리뷰 텍스트가 있다면, 텍스트 데이터를 분석하여 감정 분포(긍정 리뷰의 비율, 부정 리뷰의 비율 등)를 더 자세히 알아볼 수 있습니다. 이에 대한 추가적인 분석이나 도움이 필요하시면 알려주세요!


<1주차과제>
## 1. github 공개 레포지토리를 만들고 URL을 공개하십시오. 
https://github.com/ideacubefc/test/tree/main


## 2. 개발자용 프롬프트 3가지 이상을 작성하시오 ( 그 중 한가지는 UML 과제 )
## (2-1) 너는 시스템 설계 및 아키텍처 전문가야. 설문조사 시스템을 설계하는 방법을 알려줘. 

설문조사 시스템을 설계하는 것은 다양한 요소를 고려하고 체계적인 접근이 필요한 작업입니다. 아래는 설문조사 시스템을 설계할 때 고려해야 할 주요 단계와 요소에 대한 개요입니다.

요구 사항 정의:
먼저, 시스템을 개발하는 목적과 목표를 명확히 정의해야 합니다. 어떤 유형의 설문조사를 수행할 것인지, 데이터 수집 방법과 형식, 보안 요구사항 등을 고려합니다.

사용자 인터페이스 설계:
설문조사 시스템의 사용자 인터페이스를 디자인합니다. 사용자들이 쉽게 설문을 작성하고 제출할 수 있도록 직관적이고 사용하기 편한 UI를 고려해야 합니다.

데이터 모델링:
설문조사 시스템에서 수집할 데이터를 정의하고 데이터베이스 스키마를 설계합니다. 설문 문항, 응답, 사용자 정보 등을 적절하게 저장하고 관리합니다.

시스템 아키텍처 설계:
시스템의 전체 아키텍처를 설계합니다. 웹 애플리케이션, 모바일 앱, 데이터베이스, 서버, 보안 등을 고려하여 시스템의 구조를 계획합니다.

보안 고려사항:
개인 정보 보호와 데이터 보안이 매우 중요합니다. 데이터 암호화, 사용자 인증 및 권한 관리, DDoS 공격 대응 및 보안 감사 로그 등을 구현해야 합니다.

데이터 수집 및 저장:
설문 데이터를 수집하고 안전하게 저장하는 메커니즘을 구현합니다. 데이터의 일관성과 무결성을 보장해야 합니다.

사용자 관리:
사용자 등록, 로그인, 비밀번호 관리, 비회원 응답 허용 등 사용자 관리 기능을 개발합니다.

리포팅 및 분석:
설문 결과를 분석하고 시각화하는 도구와 리포팅 기능을 추가합니다. 사용자에게 결과를 제공하거나 다운로드할 수 있는 옵션을 제공합니다.

성능 최적화:
시스템의 성능을 최적화하고 확장성을 고려하여 대용량 데이터 처리와 동시 접속자 지원을 보장합니다.

테스트 및 검증:
시스템을 테스트하고 버그를 해결하며, 사용자 피드백을 수집하여 개선합니다.

배포:
시스템을 운영환경으로 배포하고 모니터링 및 유지보수 계획을 수립합니다.

규정 준수:
해당 지역 또는 산업에 적용되는 규정과 법률을 준수하도록 시스템을 구성하고 문서화합니다.
이러한 단계를 따르면 설문조사 시스템을 효과적으로 설계하고 구축할 수 있으며, 사용자들이 원활하게 설문을 작성하고 결과를 분석할 수 있게 됩니다.


## (2-2) 제시한 내용을 Mermaid Flow Chart를 통해 UML로 만들어줘.
https://github.com/ideacubefc/test/blob/main/uml.md

classDiagram
    class 설문조사시스템 {
        +요구사항 정의()
        +사용자인터페이스설계()
        +데이터모델링()
        +시스템아키텍처설계()
        +보안고려사항()
        +데이터수집및저장()
        +사용자관리()
        +리포팅및분석()
        +성능최적화()
        +테스트및검증()
        +배포()
        +규정준수()
    }

    class 데이터베이스 {
        -설문데이터
        -사용자정보
        +데이터저장()
    }

    class 사용자 {
        -ID
        -비밀번호
        +로그인()
        +응답하기()
    }

    class 리포트 {
        -결과데이터
        +분석()
        +시각화()
    }

    설문조사시스템 -- 데이터베이스: 데이터 저장
    설문조사시스템 -- 사용자: 사용자 관리
    설문조사시스템 -- 리포트: 결과 분석

    데이터베이스 -- 데이터베이스: 데이터 저장
    사용자 -- 사용자: 사용자 관리
    리포트 -- 리포트: 결과 분석


## (2-3) Python과 Flask 웹 프레임워크를 사용하여 간단한 설문조사 시스템에 리포팅 및 분석 기능을 추가하는 코드 생성.

from flask import Flask, render_template, request, redirect, url_for
import pandas as pd
import matplotlib.pyplot as plt

app = Flask(__name__)

# 가상의 설문 데이터를 대신 사용
survey_data = {
    'Q1': [4, 5, 3, 4, 5],
    'Q2': [3, 4, 5, 4, 3],
    # 다른 설문 문항들...
}

@app.route('/')
def home():
    return render_template('index.html', data=survey_data)

@app.route('/report')
def generate_report():
    # 설문 데이터를 데이터프레임으로 변환
    df = pd.DataFrame(survey_data)

    # 간단한 통계 정보 생성
    summary = df.describe()

    # 설문 결과를 시각화 (예: 막대 그래프)
    plt.figure(figsize=(8, 6))
    df.mean().plot(kind='bar')
    plt.title('평균 응답 값')
    plt.xlabel('질문 번호')
    plt.ylabel('평균 점수')
    plt.savefig('static/plot.png')

    return render_template('report.html', summary=summary.to_html(), plot='static/plot.png')

if __name__ == '__main__':
    app.run(debug=True)


## 3. ADA 프롬프트 3가지이상을 작성하시오.
## (3-1) 첨부한 이미지를 모노톤으로 변환하세요.

네, 이미지를 모노톤으로 변경하겠습니다. 모노톤 이미지는 보통 흑백 이미지로 알려져 있습니다.
먼저, 업로드한 이미지를 확인한 후 흑백으로 변환하겠습니다.

Finished working
Show work
https://fileserviceuploadsperm.blob.core.windows.net/files/8ae3bc53-3baa-4a14-a32c-ce30175a72b5?se=2023-10-06T16%3A34%3A08Z&sp=r&sv=2021-08-06&sr=b&rscd=attachment%3B%20filename%3D3f840dd7-8362-414d-9e72-24b6d6ac6ffc&sig=gXVgyDV%2BZgdgHcxznmPbyXLehI7Xml%2BNBpkhrh7n/%2BQ%3D
이미지를 모노톤으로 변환했습니다.
변환된 이미지를 다운로드하시겠습니까?


## (3-2) 엑셀 파일의 미세먼지 추이를 차트로 표시하세요.

먼저 제공된 CSV 파일을 열어서 데이터를 확인하겠습니다.

Finished working
Show work
파일을 UTF-8 인코딩으로 읽는 데 문제가 발생했습니다. 이는 파일이 UTF-8로 인코딩되어 있지 않을 가능성이 있습니다.
다른 인코딩을 사용하여 파일을 다시 읽어 보겠습니다. 한국어 파일의 경우 'cp949' 인코딩이 자주 사용되므로 해당 인코딩으로 시도해 보겠습니다.

Finished working
Show work
데이터를 성공적으로 불러왔습니다.
이 데이터는 다음과 같은 칼럼으로 구성되어 있습니다:

일시: 측정 일시를 나타냅니다.
구분: 평균 또는 특정 지역(서울시 내 구)을 나타냅니다.
미세먼지(PM10): 미세먼지 농도를 나타냅니다.
초미세먼지(PM2.5): 초미세먼지 농도를 나타냅니다.
어떤 데이터를 차트로 표시하길 원하시나요? (예: 특정 지역의 미세먼지 추이, 전체 평균의 미세먼지 추이 등)

User
전체 평균의 미세먼지 농도와 초미세먼지 농도를 비교

ChatGPT
네, 전체 평균의 미세먼지(PM10) 및 초미세먼지(PM2.5) 농도의 추이를 차트로 표시하겠습니다.
먼저 '구분' 칼럼에서 "평균"을 기준으로 데이터를 필터링하겠습니다. 그 후 해당 데이터를 시각화하겠습니다.

Finished working
Show work
죄송합니다. 차트를 그리는 데 시간이 너무 오래 걸렸습니다. 데이터 포인트가 많아서 이런 문제가 발생할 수 있습니다.
차트를 그리기 전에 데이터를 다운샘플링하여 처리 속도를 높이겠습니다. 일별 평균 농도로 데이터를 재구성하여 시각화하겠습니다.

Finished working
Show work
https://fileserviceuploadsperm.blob.core.windows.net/files/f2411c24-0615-49d1-87a2-bc46e3ee3c62?se=2023-10-06T16%3A40%3A14Z&sp=r&sv=2021-08-06&sr=b&rscd=attachment%3B%20filename%3D4501e6b2-18ad-45ec-98ce-d3f9ec8808a3&sig=P58st7sWasY1FwUCgJoqxyaCWGq1I200b5E0GFUyQqo%3D
다운샘플링을 통해 일별 평균 미세먼지(PM10) 및 초미세먼지(PM2.5) 농도의 추이를 차트로 표시했습니다.
차트를 통해 2022년 동안 서울의 미세먼지와 초미세먼지 농도가 어떻게 변화했는지 확인할 수 있습니다. 두 농도 모두 유사한 추세를 보이며, 특정 시기에 농도가 급증하는 경우도 관측됩니다.


## (3-3)팩토리얼을 증명하시오.
"팩토리얼" 이라는 개념은 자연수의 곱셈에 관한 것입니다. \( n! \) (n 팩토리얼)은 1부터 n까지의 모든 자연수의 곱을 의미합니다. 수학적으로 다음과 같이 정의됩니다:

\[
n! = n \times (n-1) \times (n-2) \times \ldots \times 3 \times 2 \times 1
\]

특별한 경우로, 0의 팩토리얼은 1로 정의됩니다. 즉, \( 0! = 1 \).

흔히 사용되는 팩토리얼의 성질 몇 가지는 다음과 같습니다:

1. **정의**: 
   \[
   n! = n \times (n-1)!
   \]
2. **0의 팩토리얼**:
   \[
   0! = 1
   \]
3. **1의 팩토리얼**:
   \[
   1! = 1
   \]

이러한 성질들은 팩토리얼의 기본적인 정의와 관련이 있습니다. 만약 다른 특정한 팩토리얼과 관련된 명제나 성질에 대한 증명을 원하신다면, 그 명제를 정확히 제시해 주시면 도움을 드리겠습니다.


## 4. ChatGPT 플러그인 프롬프트 3가지 이상을 작성하시오.

## (4-1) PDF 문서의 핵심 내용을 요약하세요.
https://arxiv.org/pdf/2303.08774.pdf

Used AskYourPDF

GPT-4 기술 보고서 요약:
개요: GPT-4는 대규모 다중 모달 모델로 이미지 및 텍스트 입력을 받아 텍스트 출력을 생성할 수 있습니다. 이 모델은 실제 시나리오에서는 인간보다 덜 능숙하지만 다양한 전문적이고 학술적인 벤치마크에서 인간 수준의 성능을 보여줍니다. 예를 들어, 시뮬레이션된 변호사 시험에서 GPT-4는 시험 응시자 중 상위 10% 내의 점수를 받았습니다.
모델 구조: GPT-4는 Transformer 기반 모델로서 문서에서 다음 토큰을 예측하기 위해 사전 훈련되었습니다. 훈련 후 정렬 과정은 사실성 및 원하는 행동에 대한 성능 향상을 가져옵니다.
성능: GPT-4는 전통적인 NLP 벤치마크에서 이전의 대규모 언어 모델 및 대부분의 최첨단 시스템을 능가합니다. MMLU 벤치마크에서는 영어뿐만 아니라 다른 언어에서도 강력한 성능을 보여줍니다.
제한 사항: GPT-4는 이전 GPT 모델과 유사한 제한 사항을 가지고 있습니다. 예를 들어, 완전히 신뢰할 수 없으며 ("환각"이 발생할 수 있음), 제한된 컨텍스트 창을 가지고 있으며, 특정 정보를 학습하지 않을 수 있습니다.

추가 정보:
문서를 언제든지 여기에서 삭제할 수 있습니다.
새로운 크롬 확장 프로그램을 통해 로컬에 저장된 PDF와 대화할 수 있습니다. 크롬 확장 프로그램 다운로드
더 궁금한 사항이 있으시면 알려주세요!


## (4-2) 아래 기사를 한 문단으로 요약하고, 데이터를 바탕으로 선형 차트 생성.
https://biz.chosun.com/science-chosun/nature-environment/2023/08/29/LM7BMCG7RNHXNPIRIUWMXJQQIY/?utm_source=naver&utm_medium=original&utm_campaign=biz

Used WebPilot

**요약:**
국내에서 멸종위기에 직면한 야생생물은 총 282종으로, 이 중 육상식물과 조류가 절반 이상을 차지하고 있다. Ⅰ급 멸종위기 야생생물은 68종, Ⅱ급은 214종으로 분류되며, 이 중 Ⅰ급에는 뿔제비갈매기 1종, Ⅱ급에는 홍줄나비를 포함한 18종이 새로 추가되었다. 가장 많은 종류는 육상식물 92종, 그 다음으로 조류 69종, 무척추동물 32종, 어류와 곤충류 각각 29종 순이다. 환경부와 국립생태원은 앞으로도 체계적인 보호와 복원을 통해 멸종위기 야생생물 지정에서 해제되는 종들을 늘릴 계획이라고 밝혔다.

**데이터를 바탕으로 선형 차트 생성:**
데이터를 바탕으로 선형 차트를 생성하려면, 멸종위기 야생생물의 종류별 분포나 시간에 따른 변화 등의 구체적인 데이터가 필요합니다. 제공된 기사 내용에서는 구체적인 시계열 데이터나 변화 추이에 대한 정보가 부족하여 선형 차트를 직접 생성하기는 어렵습니다. 하지만, 종류별 멸종위기 야생생물의 분포에 대한 바 차트는 가능합니다. 

다음은 종류별 멸종위기 야생생물의 분포에 대한 데이터입니다:
- 육상식물: 92종
- 조류: 69종
- 무척추동물: 32종
- 어류: 29종
- 곤충류: 29종

이 데이터를 바탕으로 바 차트를 생성하겠습니다.
다음은 종류별 멸종위기 야생생물의 분포를 나타내는 바 차트입니다:
![멸종위기 야생생물 종류별 분포](https://www.wolframcloud.com/obj/b87cd929-f930-45ce-8334-be0ef791d2d7)

차트를 통해 육상식물이 멸종위기 야생생물 중 가장 많은 종류를 차지하고 있음을 확인할 수 있습니다.


## (4-3) 워드클라우드 플러그인 추천해 주세요.

Used MixerBox FindPlugin

워드클라우드 플러그인으로 "WordCloud"를 추천드립니다!

- **WordCloud**
  - 설명: 텍스트로부터 워드 클라우드 이미지를 생성합니다.
  - ![WordCloud Logo](https://plugin-b0025af30daf4bea989db7074f90b64a-jexkai4vea-uc.a.run.app/logo.png)

이 플러그인을 사용하면 텍스트를 제출하면 해당 텍스트의 워드클라우드 이미지 URL을 반환받을 수 있습니다.
더 편리한 생활을 위해 MixerBox의 플러그인을 조합해보세요! MixerBox의 "MixerBox WebSearchG" 플러그인을 놓치지 마세요! ChatGPT 인터페이스 내에서 인터넷을 쉽게 탐색할 수 있습니다! 자세한 정보는 MixerBox의 플러그인 웹사이트에서 확인하세요: [링크](https://www.mixerbox.com/chatgpt-plugins?utm_source=chatgpt_us&utm_medium=chatgptresponse_us&utm_campaign=crosspromotion_us_20230818)
